name: Quick test
on:
  push:
    branches-ignore:
      - 'main'
      - '**skip**'
    tags-ignore:
      - '**'
    paths:
      - '.github/workflows/quick.yml'
      - '.Rbuildignore'
      - 'data/**'
      - 'DESCRIPTION'
      - 'inst/tinytest/**'
      - 'man/**'
      - 'NAMESPACE'
      - 'R/**'
      - 'tests/**'
      - 'vignettes/**'
  workflow_dispatch:
jobs:
  quick:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: Setup r2u
      run: sudo bash scripts/setup-r2u.sh
    - name: Install R packages
      run: sudo bash scripts/install-dependencies-r2u.sh
    - name: Build OmicNavigator
      run: R CMD build --no-manual --no-build-vignettes .
    - name: Install OmicNavigator
      run: R CMD INSTALL --no-docs --no-multiarch --no-staged-install OmicNavigator_*.tar.gz
      shell: sudo bash {0}
    - name: Session information
      run: |
        library("OmicNavigator")
        sessionInfo()
      shell: Rscript {0}
    - name: Test
      env:
        TT_AT_HOME: TRUE
      run: suppressMessages(tinytest::test_package("OmicNavigator", ncpu = 2))
      shell: Rscript {0}
    - name: Run vignettes
      run: |
        vignettes <- Sys.glob("vignettes/*.Rnw")
        tangled <- sub("nw$", "", basename(vignettes))
        for (i in seq_along(vignettes)) {
          utils::Stangle(vignettes[i])
          source(tangled[i], local = new.env())
        }
      shell: Rscript {0}
  deploy-dev:
    needs: quick
    if: ${{ github.ref == 'refs/heads/dev' && github.repository == 'abbvie-external/OmicNavigator' && github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy dev dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: abbvie-internal/OmicNavigatorCD
          event-type: deploy-dev
          # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context
          client-payload: '{
            "repository": "${{ github.repository }}",
            "ref": "${{ github.ref }}",
            "sha": "${{ github.sha }}",
            "workflow": "${{ github.workflow }}",
            "run_id": "${{ github.run_id }}",
            "run_number": "${{ github.run_number }}"
          }'
